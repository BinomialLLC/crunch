#summary Building the Examples
#labels Featured

= Building the Examples =

{{{crn.2008.sln}}} builds crnlib and the command line tool, and {{{crn_examples.2008.sln}}} builds the examples. Both are Visual Studio 2008 (VC9) solution file containing projects for Win32 and x64. crnlib itself also builds with VS2005, VS2010, and gcc 4.5.0 (TDM GCC+MinGW).  A codeblocks 10.05 workspace and project file is also included, but compiling crnlib this way hasn't been tested much.

crnlib/crunch don't build under Linux yet, but the stand-alone transcoder header file library [http://code.google.com/p/crunch/source/browse/trunk/inc/crn_decomp.h inc/crn_decomp.h] should compile and work fine under Linux.

== [http://code.google.com/p/crunch/source/browse/trunk/example1/example1.cpp example1] ==
Demonstrates how to use crnlib's high-level C-helper
compression/decompression/transcoding functions in [http://code.google.com/p/crunch/source/browse/trunk/inc/crnlib.h inc/crnlib.h]. It's a
fairly complete example of crnlib's functionality.

== [http://code.google.com/p/crunch/source/browse/trunk/example2/example2.cpp example2] ==
Shows how to transcodec .CRN files to .DDS using *only*
the functionality in [http://code.google.com/p/crunch/source/browse/trunk/inc/crn_decomp.h inc/crn_decomp.h]. It does not link against against
crnlib.lib or depend on it in any way. (Note: The complete source code,
approx. 4800 lines, to the CRN transcoder is included in [http://code.google.com/p/crunch/source/browse/trunk/inc/crn_decomp.h inc/crn_decomp.h].)

example2 is intended to show how simple it is to integrate CRN textures
into your application.

== [http://code.google.com/p/crunch/source/browse/trunk/example3/example3.cpp example3] ==
Shows how to use the regular, low-level DXTn block compressor
functions in [http://code.google.com/p/crunch/source/browse/trunk/inc/crn_decomp.h inc/crnlib.h]. This functionality is included for
completeness. (Your engine or toolchain most likely already has its own
DXTn compressor. crnlib's compressor is typically very competitive or
superior to most available closed and open source CPU-based
compressors.)